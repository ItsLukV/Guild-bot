name: Deploy to Production
on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
      - name: Install DigitalOcean Controller
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Set up Docker Builder
        uses: docker/setup-buildx-action@v1
      - name: Authenticate with DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 180
      - name: Build and Push to DigitalOcean Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            registry.digitalocean.com/guild-docker/bot:latest
            registry.digitalocean.com/guild-docker/bot:sha-${{ github.sha }}

  deploy-api-1:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Droplets already have docker, doctl + auth, and curl installed
      - name: Deploy api to DigitalOcean Droplet
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.DO_API_HOST }}
          username: root
          key: ${{ secrets.DO_API_KEY }}
          script: |
            doctl registry login --expiry-seconds 180
            docker pull registry.digitalocean.com/guild-docker/bot:latest

            docker stop bot || true
            docker rm bot || true

            echo "starting server instance..."
            docker run -d \
              --restart always \
              --name bot \
              -e DISCORD_TOKEN="$DISCORD_TOKEN" \
              -e HYPIXEL_API="$HYPIXEL_API" \
              -e API_URL="$API_URL" \
              -e API_TOKEN="$API_TOKEN" \
              -e DEBUG="$DEBUG" \
              registry.digitalocean.com/guild-docker/bot:latest
